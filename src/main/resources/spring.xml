<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <!--开启注解 ,spring容器根据基础包，扫描基础包下的子包和类，由spring容器管理-->
    <context:component-scan base-package="com.dr"></context:component-scan>
    <!--加载属性文件，properties文件在linux下是一个加密文件，安全-->
    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>
    <!--c3p0带有连接池的数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${db.driver}"></property>
        <property name="jdbcUrl" value="${db.url}"></property>
        <property name="user" value="${db.user}"></property>
        <property name="password" value="${db.password}"></property>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="mapperLocations" value="classpath:com/dr/mapper/*Mapper.xml"></property>
        <property name="dataSource" ref="dataSource"></property>
        <!--分页插件-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory" index="0"></constructor-arg>
    </bean>
    <!--配置mybatis mapper接口的代理实现类-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--配置mybatis.Dao接口的代理实现类，dao层不需要写实现类了，直接调用dao层的方法-->
        <property name="basePackage" value="com.dr.dao"></property>
        <!---->
        <property name="sqlSessionTemplateBeanName" value="sqlSession"></property>

    </bean>

</beans>